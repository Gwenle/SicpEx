#lang sicp
(define (sumAn an n)
     (cond ((< n 0) 0)
     (else (+ (an n) (sumAn an (- n 1)))
           )))
(define (cube x)(* x x x))
(define (xp f a b n)
  (define (h) (/ (- b a) n))
  (define (aN n) (f (+ a (* n (h)))))
  (define (an p) (cond ((= p n) (aN p))
                       ((= p 0) (aN 0))
                       ((= (remainder p 2) 0) (* 2 (aN p)))
                       (else (* 4 (aN p)))))
  (* (/ (h) 3) (sumAn an n))
)
(xp cube 0 5 1000)